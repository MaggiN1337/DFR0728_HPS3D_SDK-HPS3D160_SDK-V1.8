[
    {
        "id": "hps3d_flow",
        "type": "tab",
        "label": "HPS3D LIDAR Control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "mqtt_broker",
        "type": "mqtt-broker",
        "name": "mqtt-server",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "mqtt_in",
        "type": "mqtt in",
        "z": "hps3d_flow",
        "name": "LIDAR Measurements",
        "topic": "hps3d/measurements",
        "qos": "0",
        "datatype": "json",
        "broker": "mqtt_broker",
        "nl": false,
        "rap": true,
        "x": 150,
        "y": 100,
        "wires": [["process_measurements"]]
    },
    {
        "id": "process_measurements",
        "type": "function",
        "z": "hps3d_flow",
        "name": "Process Points",
        "func": "// Extrahiere die Messwerte\nconst points = msg.payload.measurements;\n\n// Speichere nur die Distanzwerte als ganze Zahlen im globalen Kontext\nglobal.set('lidar_point1', Math.round(points.point_1.distance_mm));\nglobal.set('lidar_point2', Math.round(points.point_2.distance_mm));\nglobal.set('lidar_point3', Math.round(points.point_3.distance_mm));\nglobal.set('lidar_point4', Math.round(points.point_4.distance_mm));\n\n// Erstelle separate Nachrichten f√ºr jeden Punkt im Chart\nconst chartMsgs = [\n    { topic: 'Punkt 1', payload: points.point_1.distance_mm },\n    { topic: 'Punkt 2', payload: points.point_2.distance_mm },\n    { topic: 'Punkt 3', payload: points.point_3.distance_mm },\n    { topic: 'Punkt 4', payload: points.point_4.distance_mm }\n];\n\n// Erstelle die Gauge-Nachrichten als Array\nconst gaugeMessages = [\n    {\n        topic: 'point_1',\n        payload: points.point_1.distance_mm,\n        valid: points.point_1.valid\n    },\n    {\n        topic: 'point_2',\n        payload: points.point_2.distance_mm,\n        valid: points.point_2.valid\n    },\n    {\n        topic: 'point_3',\n        payload: points.point_3.distance_mm,\n        valid: points.point_3.valid\n    },\n    {\n        topic: 'point_4',\n        payload: points.point_4.distance_mm,\n        valid: points.point_4.valid\n    }\n];\n\n// Sende Nachrichten an Gauges und Chart\nnode.send([gaugeMessages, chartMsgs]);\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "// Initialisiere globale Variablen\nglobal.set('lidar_point1', 0);\nglobal.set('lidar_point2', 0);\nglobal.set('lidar_point3', 0);\nglobal.set('lidar_point4', 0);",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 100,
        "wires": [["point_filter_1", "point_filter_2", "point_filter_3", "point_filter_4"], ["point_charts"]]
    },
    {
        "id": "point_filter_1",
        "type": "switch",
        "z": "hps3d_flow",
        "name": "Filter Point 1",
        "property": "topic",
        "propertyType": "msg",
        "rules": [{"t": "eq", "v": "point_1", "vt": "str"}],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 80,
        "wires": [["point_gauge_1"]]
    },
    {
        "id": "point_filter_2",
        "type": "switch",
        "z": "hps3d_flow",
        "name": "Filter Point 2",
        "property": "topic",
        "propertyType": "msg",
        "rules": [{"t": "eq", "v": "point_2", "vt": "str"}],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 120,
        "wires": [["point_gauge_2"]]
    },
    {
        "id": "point_filter_3",
        "type": "switch",
        "z": "hps3d_flow",
        "name": "Filter Point 3",
        "property": "topic",
        "propertyType": "msg",
        "rules": [{"t": "eq", "v": "point_3", "vt": "str"}],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 160,
        "wires": [["point_gauge_3"]]
    },
    {
        "id": "point_filter_4",
        "type": "switch",
        "z": "hps3d_flow",
        "name": "Filter Point 4",
        "property": "topic",
        "propertyType": "msg",
        "rules": [{"t": "eq", "v": "point_4", "vt": "str"}],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 200,
        "wires": [["point_gauge_4"]]
    },
    {
        "id": "point_gauge_1",
        "type": "ui_gauge",
        "z": "hps3d_flow",
        "name": "Point 1 Distance",
        "group": "g-lidar",
        "order": 3,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Point 1",
        "label": "mm",
        "format": "{{value}}",
        "min": 0,
        "max": "1600",
        "colors": ["#00b500","#e6e600","#ca3838"],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 550,
        "y": 80,
        "wires": []
    },
    {
        "id": "point_gauge_2",
        "type": "ui_gauge",
        "z": "hps3d_flow",
        "name": "Point 2 Distance",
        "group": "g-lidar",
        "order": 4,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Point 2",
        "label": "mm",
        "format": "{{value}}",
        "min": 0,
        "max": "1600",
        "colors": ["#00b500","#e6e600","#ca3838"],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 550,
        "y": 120,
        "wires": []
    },
    {
        "id": "point_gauge_3",
        "type": "ui_gauge",
        "z": "hps3d_flow",
        "name": "Point 3 Distance",
        "group": "g-lidar",
        "order": 5,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Point 3",
        "label": "mm",
        "format": "{{value}}",
        "min": 0,
        "max": "1600",
        "colors": ["#00b500","#e6e600","#ca3838"],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 550,
        "y": 160,
        "wires": []
    },
    {
        "id": "point_gauge_4",
        "type": "ui_gauge",
        "z": "hps3d_flow",
        "name": "Point 4 Distance",
        "group": "g-lidar",
        "order": 6,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Point 4",
        "label": "mm",
        "format": "{{value}}",
        "min": 0,
        "max": "1600",
        "colors": ["#00b500","#e6e600","#ca3838"],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 550,
        "y": 200,
        "wires": []
    },
    {
        "id": "point_charts",
        "type": "ui_chart",
        "z": "hps3d_flow",
        "name": "Distance History",
        "group": "g-lidar",
        "order": 7,
        "width": "12",
        "height": "4",
        "label": "Distanz Historie",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Keine Daten",
        "dot": false,
        "ymin": "0",
        "ymax": "1600",
        "removeOlder": "10",
        "removeOlderPoints": "100",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": ["#1f77b4", "#aec7e8", "#ff7f0e", "#2ca02c"],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 550,
        "y": 160,
        "wires": [[]],
        "options": {
            "seriesColors": ["#1f77b4", "#aec7e8", "#ff7f0e", "#2ca02c"],
            "seriesNames": ["Punkt 1", "Punkt 2", "Punkt 3", "Punkt 4"]
        }
    },
    {
        "id": "control_switch",
        "type": "ui_switch",
        "z": "hps3d_flow",
        "name": "LIDAR Control",
        "label": "Measurement Active",
        "tooltip": "",
        "group": "g-lidar",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "control",
        "topicType": "str",
        "style": "",
        "onvalue": "start",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "stop",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 150,
        "y": 200,
        "wires": [["mqtt_control"]]
    },
    {
        "id": "mqtt_control",
        "type": "mqtt out",
        "z": "hps3d_flow",
        "name": "Control Command",
        "topic": "hps3d/control",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "mqtt_broker",
        "x": 350,
        "y": 200,
        "wires": []
    },
    {
        "id": "http_status",
        "type": "http request",
        "z": "hps3d_flow",
        "name": "Get Status",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/status",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 350,
        "y": 300,
        "wires": [["status_display"]]
    },
    {
        "id": "status_trigger",
        "type": "inject",
        "z": "hps3d_flow",
        "name": "Check Status",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 300,
        "wires": [["http_status"]]
    },
    {
        "id": "status_display",
        "type": "ui_text",
        "z": "hps3d_flow",
        "group": "g-lidar",
        "order": 2,
        "width": "9",
        "height": "1",
        "name": "Status",
        "label": "Status",
        "format": "{{msg.payload.active ? 'Active' : 'Inactive'}} | {{msg.payload.connected ? 'Connected' : 'Disconnected'}}",
        "layout": "row-spread",
        "className": "",
        "x": 550,
        "y": 300,
        "wires": []
    },
    {
        "id": "debug_view",
        "type": "debug",
        "z": "hps3d_flow",
        "name": "Debug View",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 240,
        "wires": []
    },
    {
        "id": "g-lidar",
        "type": "ui_group",
        "name": "LIDAR",
        "tab": "t-lidar",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "t-lidar",
        "type": "ui_tab",
        "name": "LIDAR Control",
        "icon": "mi-arrow_downward",
        "disabled": false,
        "hidden": false
    }
] 